---
- hosts: all
  sudo: yes
  roles:
    - angstwad.docker_ubuntu
  vars:
    hostname: helper.schep.me
    bind_port: 8000
  tasks:
    - include_vars: vars.yml
    - include_vars: secrets.yml
    - name: db container
      docker:
        name: helper-db
        image: postgres
        state: started
        restart_policy: always
    - name: broker container
      docker:
        name: helper-broker
        image: redis
        state: started
        restart_policy: always
    - name: web container
      docker:
        name: helper-web
        image: dschep/helper
        command: gunicorn helper.wsgi:application --bind=0:8000 --access-logfile - --error-logfile -
        state: reloaded
        restart_policy: always
        pull: always
        ports:
          - "{{ bind_port }}:8000"
        links:
          - helper-db:db
          - helper-broker:broker
        env:
          SECRET_KEY: "{{ SECRET_KEY }}"
          EMAIL_HOST: "{{ EMAIL_HOST }}"
          EMAIL_HOST_USER: "{{ EMAIL_HOST_USER }}"
          EMAIL_HOST_PASSWORD: "{{ EMAIL_HOST_PASSWORD }}"
          EMAIL_PORT: "{{ EMAIL_PORT }}"
          EMAIL_USE_TLS: "{{ EMAIL_USE_TLS }}"
          DEFAULT_FROM_EMAIL: "{{ DEFAULT_FROM_EMAIL }}"
          SERVER_EMAIL: "{{ SERVER_EMAIL }}"
          ADMIN_EMAIL: "{{ ADMIN_EMAIL }}"
          CELERY_SEND_TASK_ERROR_EMAILS: "{{ CELERY_SEND_TASK_ERROR_EMAILS }}"
          BROKER_URL: "{{ BROKER_URL }}"
          BROKER_URL: "{{ BROKER_URL }}"
          DATABASE_URL: "{{ DATABASE_URL }}"
          CELERY_RESULT_BACKEND: "{{ CELERY_RESULT_BACKEND }}"
    - name: worker container
      docker:
        name: helper-worker
        image: dschep/helper
        command: celery worker -A helper -l info -B
        state: reloaded
        restart_policy: always
        pull: always
        links:
          - helper-db:db
          - helper-broker:broker
        env:
          SECRET_KEY: "{{ SECRET_KEY }}"
          EMAIL_HOST: "{{ EMAIL_HOST }}"
          EMAIL_HOST_USER: "{{ EMAIL_HOST_USER }}"
          EMAIL_HOST_PASSWORD: "{{ EMAIL_HOST_PASSWORD }}"
          EMAIL_PORT: "{{ EMAIL_PORT }}"
          EMAIL_USE_TLS: "{{ EMAIL_USE_TLS }}"
          DEFAULT_FROM_EMAIL: "{{ DEFAULT_FROM_EMAIL }}"
          SERVER_EMAIL: "{{ SERVER_EMAIL }}"
          ADMIN_EMAIL: "{{ ADMIN_EMAIL }}"
          CELERY_SEND_TASK_ERROR_EMAILS: "{{ CELERY_SEND_TASK_ERROR_EMAILS }}"
          C_FORCE_ROOT: true
          BROKER_URL: "{{ BROKER_URL }}"
          DATABASE_URL: "{{ DATABASE_URL }}"
          CELERY_RESULT_BACKEND: "{{ CELERY_RESULT_BACKEND }}"
    - name: install nginx
      apt: pkg=nginx state=present
    - name: copy nginx site
      template: src=nginx-site dest=/etc/nginx/sites-enabled/helper
      notify:
        - restart nginx
  handlers:
    - name: restart nginx
      service: name=nginx state=restarted
